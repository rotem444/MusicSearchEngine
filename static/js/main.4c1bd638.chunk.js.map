{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","grid","setGrid","value","setValue","useEffect","axios","get","then","data","_","chunk","catch","err","console","log","className","onChange","target","placeholder","style","border","map","row","index","id","title","preview","artist","picture","name","width","src","alt","height","controls","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAsEeA,MAjEf,WAAgB,IAAD,EACWC,mBAAS,CAAC,KADrB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAkBb,OAZAC,qBAAU,WACHF,GAAOD,EAAQ,CAAC,KACrBI,IACGC,IADH,4HAEyHJ,IAEtHK,MAAK,YAAyB,IAAdC,EAAa,EAArBA,KAAQA,KACVA,GACLP,EAAQQ,IAAEC,MAAMF,EAAM,OAEvBG,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACV,IAEF,sBAAKa,UAAU,sBAAf,UACE,oBAAIA,UAAU,YAAd,iCACA,mBAAGA,UAAU,YAAb,0GAIA,iDACM,CAAEC,SAvBK,SAAC,GAA2B,IAAfd,EAAc,EAAxBe,OAAUf,MAC5BC,EAASD,IAsBWA,UADlB,IAEEa,UAAU,mCACVG,YAAY,yBAGd,uBAAOC,MAAO,CAAEC,OAAQ,mBAAqBL,UAAU,kBAAvD,SACE,uBAAOA,UAAU,kBAAjB,SACGf,EAAKqB,KAAI,SAACC,EAAKC,GAAN,OACR,oBAAgBR,UAAU,kBAA1B,SACGO,EAAID,KAAI,gBAAGG,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,QAAd,IAAuBC,OAAUC,EAAjC,EAAiCA,QAASC,EAA1C,EAA0CA,KAA1C,OACP,oBAAaV,MAAO,CAAEW,MAAO,OAA7B,SACE,sBAAKf,UAAU,OAAf,UACE,qBACEgB,IAAKH,EACLI,IAAKP,EACLV,UAAU,eACVI,MAAO,CAAEW,MAAO,WAElB,sBAAKf,UAAU,YAAYI,MAAO,CAAEc,OAAQ,SAA5C,UACG,IACD,oBAAIlB,UAAU,aAAd,SAA4Bc,IAC5B,mBAAGd,UAAU,YAAb,SAA0BU,OAE5B,qBAAKV,UAAU,2BAAf,SACE,uBAAOmB,UAAQ,EAACf,MAAO,CAAEW,MAAO,OAAhC,SACE,wBAAQC,IAAKL,EAASS,KAAK,sBAf1BX,OAFJD,cC3BNa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4c1bd638.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [grid, setGrid] = useState([[]]);\n  const [value, setValue] = useState(\"\");\n  const onChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n  useEffect(() => {\n    if (!value) setGrid([[]]);\n    axios\n      .get(\n        `https://deezerdevs-deezer.p.rapidapi.com/search?rapidapi-key=0553c29e4bmsh3a239d5a07dbdb4p1e9ae1jsnc9399dacde13&q=${value}`\n      )\n      .then(({ data: { data } }) => {\n        if (!data) return;\n        setGrid(_.chunk(data, 5));\n      })\n      .catch((err) => console.log(err));\n  }, [value]);\n  return (\n    <div className=\"App container-fluid\">\n      <h1 className=\"mt-4 mb-2\">Music Search Engine</h1>\n      <p className=\"container\">\n        This search engine will be able to register an artist's name and get\n        trailers for his songs.\n      </p>\n      <input\n        {...{ onChange, value }}\n        className=\"form-control w-50 mb-2 container\"\n        placeholder=\"Type name of artist\"\n      />\n\n      <table style={{ border: \"1px solid black\" }} className=\"container-fluid\">\n        <tbody className=\"container-fluid\">\n          {grid.map((row, index) => (\n            <tr key={index} className=\"container-fluid\">\n              {row.map(({ id, title, preview, artist: { picture, name } }) => (\n                <td key={id} style={{ width: \"15%\" }}>\n                  <div className=\"card\">\n                    <img\n                      src={picture}\n                      alt={title}\n                      className=\"card-img-top\"\n                      style={{ width: \"18rem\" }}\n                    />\n                    <div className=\"card-body\" style={{ height: \"150px\" }}>\n                      {\" \"}\n                      <h5 className=\"card-title\">{name}</h5>\n                      <p className=\"card-text\">{title}</p>\n                    </div>\n                    <div className=\"card-footer bg-secondary\">\n                      <audio controls style={{ width: \"90%\" }}>\n                        <source src={preview} type=\"audio/ogg\" />\n                      </audio>\n                    </div>\n                  </div>\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}